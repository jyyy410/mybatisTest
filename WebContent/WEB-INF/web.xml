<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name>crm</display-name>
	
		 <!--如果不定义webAppRootKey参数，那么webAppRootKey就是缺省的"webapp.root"-->
	<!-- 这里的ssh1是http://localhost:8088/ssh1/ -->
	<!-- 而root是系统开发目录中test5/root-->
	<context-param>
	       <param-name>webAppRootKey</param-name>
	       <param-value>crm.root</param-value>
	</context-param> 
	<!-- 由Sprng载入的Log4j配置文件位置 -->
	<context-param>
	       <param-name>log4jConfigLocation</param-name>
	       <param-value>classpath:log4j.properties</param-value>
	</context-param>
	<!-- Spring默认刷新Log4j配置文件的间隔,单位为millisecond -->
	<context-param>
	       <param-name>log4jRefreshInterval</param-name>
	       <param-value>60000</param-value>
	</context-param>
	
	<!-- Web 项目 Spring 加载 Log4j 的监听  -->
	<listener> 
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class> 
	</listener> 
	
	<!-- 设置Spring容器加载配置文件路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:springContext/*Context.xml</param-value>
	</context-param>

	<!-- 加载Spring容器配置 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

    <!-- 防止内存泄漏的监听器 -->
	  <listener>
	  	<listener-class>
	  		org.springframework.web.util.IntrospectorCleanupListener
	  	</listener-class>
	  </listener>
	  
	<!-- 配置Springmvc核心控制器 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup><!-- 立马启动servlet -->
	</servlet>

	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 解决工程编码过滤器 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
